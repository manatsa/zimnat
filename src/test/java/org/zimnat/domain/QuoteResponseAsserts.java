package org.zimnat.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class QuoteResponseAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuoteResponseAllPropertiesEquals(QuoteResponse expected, QuoteResponse actual) {
        assertQuoteResponseAutoGeneratedPropertiesEquals(expected, actual);
        assertQuoteResponseAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuoteResponseAllUpdatablePropertiesEquals(QuoteResponse expected, QuoteResponse actual) {
        assertQuoteResponseUpdatableFieldsEquals(expected, actual);
        assertQuoteResponseUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuoteResponseAutoGeneratedPropertiesEquals(QuoteResponse expected, QuoteResponse actual) {
        assertThat(expected)
            .as("Verify QuoteResponse auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuoteResponseUpdatableFieldsEquals(QuoteResponse expected, QuoteResponse actual) {
        assertThat(expected)
            .as("Verify QuoteResponse relevant properties")
            .satisfies(e -> assertThat(e.getResult()).as("check result").isEqualTo(actual.getResult()))
            .satisfies(e -> assertThat(e.getMessage()).as("check message").isEqualTo(actual.getMessage()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuoteResponseUpdatableRelationshipsEquals(QuoteResponse expected, QuoteResponse actual) {
        assertThat(expected)
            .as("Verify QuoteResponse relationships")
            .satisfies(e -> assertThat(e.getQuotes()).as("check quotes").isEqualTo(actual.getQuotes()));
    }
}
