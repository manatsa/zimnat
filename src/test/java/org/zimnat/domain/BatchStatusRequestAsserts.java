package org.zimnat.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BatchStatusRequestAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBatchStatusRequestAllPropertiesEquals(BatchStatusRequest expected, BatchStatusRequest actual) {
        assertBatchStatusRequestAutoGeneratedPropertiesEquals(expected, actual);
        assertBatchStatusRequestAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBatchStatusRequestAllUpdatablePropertiesEquals(BatchStatusRequest expected, BatchStatusRequest actual) {
        assertBatchStatusRequestUpdatableFieldsEquals(expected, actual);
        assertBatchStatusRequestUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBatchStatusRequestAutoGeneratedPropertiesEquals(BatchStatusRequest expected, BatchStatusRequest actual) {
        assertThat(expected)
            .as("Verify BatchStatusRequest auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBatchStatusRequestUpdatableFieldsEquals(BatchStatusRequest expected, BatchStatusRequest actual) {
        assertThat(expected)
            .as("Verify BatchStatusRequest relevant properties")
            .satisfies(e -> assertThat(e.getTheFunction()).as("check theFunction").isEqualTo(actual.getTheFunction()))
            .satisfies(e -> assertThat(e.getInsuranceIDBatch()).as("check insuranceIDBatch").isEqualTo(actual.getInsuranceIDBatch()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBatchStatusRequestUpdatableRelationshipsEquals(BatchStatusRequest expected, BatchStatusRequest actual) {}
}
