package org.zimnat.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LICResultAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLICResultAllPropertiesEquals(LICResult expected, LICResult actual) {
        assertLICResultAutoGeneratedPropertiesEquals(expected, actual);
        assertLICResultAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLICResultAllUpdatablePropertiesEquals(LICResult expected, LICResult actual) {
        assertLICResultUpdatableFieldsEquals(expected, actual);
        assertLICResultUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLICResultAutoGeneratedPropertiesEquals(LICResult expected, LICResult actual) {
        assertThat(expected)
            .as("Verify LICResult auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLICResultUpdatableFieldsEquals(LICResult expected, LICResult actual) {
        assertThat(expected)
            .as("Verify LICResult relevant properties")
            .satisfies(e -> assertThat(e.getPartnerReference()).as("check partnerReference").isEqualTo(actual.getPartnerReference()))
            .satisfies(e -> assertThat(e.getTheDate()).as("check theDate").isEqualTo(actual.getTheDate()))
            .satisfies(e -> assertThat(e.getTheVersion()).as("check theVersion").isEqualTo(actual.getTheVersion()))
            .satisfies(e -> assertThat(e.getPartnerToken()).as("check partnerToken").isEqualTo(actual.getPartnerToken()))
            .satisfies(e -> assertThat(e.getLicenceID()).as("check licenceID").isEqualTo(actual.getLicenceID()))
            .satisfies(e -> assertThat(e.getFunction()).as("check function").isEqualTo(actual.getFunction()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLICResultUpdatableRelationshipsEquals(LICResult expected, LICResult actual) {}
}
