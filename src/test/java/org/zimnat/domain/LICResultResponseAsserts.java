package org.zimnat.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LICResultResponseAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLICResultResponseAllPropertiesEquals(LICResultResponse expected, LICResultResponse actual) {
        assertLICResultResponseAutoGeneratedPropertiesEquals(expected, actual);
        assertLICResultResponseAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLICResultResponseAllUpdatablePropertiesEquals(LICResultResponse expected, LICResultResponse actual) {
        assertLICResultResponseUpdatableFieldsEquals(expected, actual);
        assertLICResultResponseUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLICResultResponseAutoGeneratedPropertiesEquals(LICResultResponse expected, LICResultResponse actual) {
        assertThat(expected)
            .as("Verify LICResultResponse auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLICResultResponseUpdatableFieldsEquals(LICResultResponse expected, LICResultResponse actual) {
        assertThat(expected)
            .as("Verify LICResultResponse relevant properties")
            .satisfies(e -> assertThat(e.getPartnerReference()).as("check partnerReference").isEqualTo(actual.getPartnerReference()))
            .satisfies(e -> assertThat(e.getTheDate()).as("check theDate").isEqualTo(actual.getTheDate()))
            .satisfies(e -> assertThat(e.getVersion()).as("check version").isEqualTo(actual.getVersion()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLICResultResponseUpdatableRelationshipsEquals(LICResultResponse expected, LICResultResponse actual) {
        assertThat(expected)
            .as("Verify LICResultResponse relationships")
            .satisfies(e -> assertThat(e.getResponse()).as("check response").isEqualTo(actual.getResponse()));
    }
}
