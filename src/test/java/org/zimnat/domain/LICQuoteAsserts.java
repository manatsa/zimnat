package org.zimnat.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LICQuoteAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLICQuoteAllPropertiesEquals(LICQuote expected, LICQuote actual) {
        assertLICQuoteAutoGeneratedPropertiesEquals(expected, actual);
        assertLICQuoteAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLICQuoteAllUpdatablePropertiesEquals(LICQuote expected, LICQuote actual) {
        assertLICQuoteUpdatableFieldsEquals(expected, actual);
        assertLICQuoteUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLICQuoteAutoGeneratedPropertiesEquals(LICQuote expected, LICQuote actual) {
        assertThat(expected)
            .as("Verify LICQuote auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLICQuoteUpdatableFieldsEquals(LICQuote expected, LICQuote actual) {
        assertThat(expected)
            .as("Verify LICQuote relevant properties")
            .satisfies(e -> assertThat(e.getPartnerReference()).as("check partnerReference").isEqualTo(actual.getPartnerReference()))
            .satisfies(e -> assertThat(e.getTheDate()).as("check theDate").isEqualTo(actual.getTheDate()))
            .satisfies(e -> assertThat(e.getTheVersion()).as("check theVersion").isEqualTo(actual.getTheVersion()))
            .satisfies(e -> assertThat(e.getPartnerToken()).as("check partnerToken").isEqualTo(actual.getPartnerToken()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLICQuoteUpdatableRelationshipsEquals(LICQuote expected, LICQuote actual) {
        assertThat(expected)
            .as("Verify LICQuote relationships")
            .satisfies(e -> assertThat(e.getRequest()).as("check request").isEqualTo(actual.getRequest()));
    }
}
